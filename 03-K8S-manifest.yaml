---
# Source: bl45p-mo-ioc-01/templates/ioc.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name:  bl45p-mo-ioc-01
  namespace: bl45p
  labels:
    app: bl45p-mo-ioc-01
    beamline: bl45p
    ioc_version: "0.0.1-b0"
    is_ioc: "True"
data:

  ioc.boot.yaml: |
    # yaml-language-server: $schema=file://ibek/pmac.ibek.entities.schema.json
    ioc_name: bl45p-mo-ioc-01
    description: motion IOC for the test beamline p45 in G13
    generic_ioc_image: ghcr.io/epics-containers/ioc-pmac-run:1.2.0
  
    # TODO need to make use of lists / strings consistent
    # ANSWERS - script \n separated string, include,define are lists
    # currently include_args is a list, define_args is a string, script is a list
    # script should be a string, not sure about include_args but it could be a , and CR
    # separate string?
  
    # TODO would be good to have 'databases: include_all' for auto-substitution modules.
    # ANSWERS - use wildcards in include args
  
    entities:
      - type: epics.EPICS_CA_MAX_ARRAY_BYTES
        max_bytes: 6000000
  
      - type: pmac.PmacAsynIPPort
        name: BRICK1port
        IP: 172.23.59.21
  
      - type: deviocstats.iocAdminSoft
        IOC: BL45P-MO-IOC-01
  
      - type: pmac.Geobrick
        name: BRICK1
        # NOTE: validation cannot check the object type (NEVER FIX)
        PORT: BRICK1port
        P: BL45P-MO-STEP-01
        # NOTE: There is no honouring defaults in Database files
        # in fact we repeat the defaults in the definitions YAML
        # ANSWER OK!
        numAxes: 8
        idlePoll: 100
        movingPoll: 500
  
      - type: pmac.DlsPmacAsynMotor
        name: STAGE1.THETA_TOP
        Controller: BRICK1
        axis: 2
        P: BL45P-MO-STAGE-01
        M: :THETA:TOP
        ACCL: 0.1
        MRES: 0.087890625
        VELO: 90
        # NOTE: VMAX is a string because we usually use $(VELO)
        # ? Would a Union be better - what about other number args
        VMAX: "1080"
        HOMEVISSTR: Absolute Encoder
        EGU: deg
  
      - type: pmac.DlsPmacAsynMotor
        name: STAGE1.THETA_BOT
        Controller: BRICK1
        ACCL: 0.1
        axis: 3
        P: BL45P-MO-STAGE-01
        M: :THETA:BOT
        DESC: Theta bottom
        EGU: deg
        HOMEVISSTR: Absolute Encoder
        MRES: 0.087890625
        PREC: 3
        VELO: 90
        VMAX: "1080"
  
      - type: pmac.DlsPmacAsynMotor
        name: CHOP1.HOR
        Controller: BRICK1
        axis: 4
        P: BL45P-MO-CHOP-01
        M: :ENDAT
        DESC: Hor EnDat chopper
        EGU: deg
        HOMEVIS: 0
        HOMEVISSTR: Absolute Encoder
        MRES: 0.000043
        PREC: 5
        VELO: 43
  
      - type: pmac.DlsPmacAsynMotor
        name: CHOP1.VER
        Controller: BRICK1
        ACCL: 0.01
        axis: 5
        P: BL45P-MO-CHOP-01
        M: :BISS
        DESC: Ver Biss chopper
        EGU: deg
        HOMEVIS: 0
        HOMEVISSTR: Absolute Encoder
        MRES: 0.000687
        PREC: 5
        VELO: 720
  
      - type: pmac.DlsPmacAsynMotor
        name: STAGE1.X
        Controller: BRICK1
        axis: 6
        P: BL45P-MO-STAGE-01
        M: :X
        DESC: Sample X
        DHLM: 19
        DLLM: 0.0
        EGU: mm
        MRES: 0.0001
        PREC: 3
        VELO: 5
  
      - type: pmac.DlsPmacAsynMotor
        name: STAGE1.Y_TOP
        Controller: BRICK1
        axis: 7
        P: BL45P-MO-STAGE-01
        M: :Y:TOP
        DESC: Sample Y top
        DHLM: 4
        DLLM: -1
        EGU: mm
        MRES: 0.0005
        PREC: 3
        VELO: 5
  
      - type: pmac.DlsPmacAsynMotor
        name: STAGE1.Y_BOT
        Controller: BRICK1
        P: BL45P-MO-STAGE-01
        M: :Y:BOT
        axis: 8
        DESC: Sample Y bottom
        DHLM: 4
        DLLM: -1
        EGU: mm
        MRES: 0.0005
        PREC: 3
        VELO: 5
  
      - type: pmac.CS
        name: BRICK1.CS1
        CS: 1
        Controller: BRICK1
  
        # NOTE: objects must be defined before references to them.
        # Vscode schema checks do NOT pick this up and the apischema error is v bad.
      - type: pmac.CS
        name: BRICK1.CS2
        CS: 2
        Controller: BRICK1
  
      - type: pmac.CS
        name: BRICK1.CS3
        CS: 3
        Controller: BRICK1
  
      - type: pmac.DlsCsPmacAsynMotor
        name: STAGE1.CS.THETA
        CsController: BRICK1.CS2
        axis: 7
        P: BL45P-MO-STAGE-01
        M: :THETA:POS
        ACCL: 0.1
        MRES: 0.0001
        VELO: 30
        DESC: Theta position
        DHLM: 10000
        DLLM: -10000
        EGU: deg
        PREC: 3
        TWV: 5
  
      - type: pmac.DlsCsPmacAsynMotor
        name: STAGE1.CS.THETA_SKEW
        CsController: BRICK1.CS2
        axis: 8
        P: BL45P-MO-STAGE-01
        M: :THETA:SKEW
        ACCL: 0.1
        DESC: Theta skew
        DHLM: 360
        DLLM: -360
        EGU: deg
        MRES: 0.0001
        PREC: 3
        TWV: 5
        VELO: 10
  
      - type: pmac.DlsCsPmacAsynMotor
        name: STAGE1.CS.Y
        CsController: BRICK1.CS3
        axis: 7
        P: BL45P-MO-STAGE-01
        M: :CS:Y
        DESC: CS Y
        DHLM: 4
        DLLM: -1
        EGU: mm
        MRES: 0.0001
        PREC: 3
        TWV: 0.5
        VELO: 5
  
      - type: pmac.DlsCsPmacAsynMotor
        name: STAGE1.CS.Y_STRETCH
        CsController: BRICK1.CS3
        axis: 8
        P: BL45P-MO-STAGE-01
        M: :CS:Y:STRETCH
        DESC: CS Y stretch
        DHLM: 2
        DLLM: -2
        EGU: mm
        MRES: 0.0001
        PREC: 3
        TWV: 0.5
        VELO: 5
  
      - type: pmac.pmacDisableLimitsCheck
        Controller: BRICK1
        Axis: 2
  
      - type: pmac.pmacDisableLimitsCheck
        Controller: BRICK1
        Axis: 3
  
      - type: pmac.pmacDisableLimitsCheck
        Controller: BRICK1
        Axis: 4
  
      - type: pmac.pmacDisableLimitsCheck
        Controller: BRICK1
        Axis: 5
  
      - type: pmac.autohome
        Controller: BRICK1
        P: BL45P-MO-STAGE-01
        PLC: 10
        GRP2: Theta
        GRP3: X
        GRP4: Y top
        GRP5: Y bottom
  start.sh: |
    #!/bin/bash
  
    #
    # generic kubernetes IOC startup script
    #
    this_dir=$(realpath $(dirname $0))
    TOP=$(realpath ${this_dir}/..)
    cd ${this_dir}
  
    set -x -e
  
    # add module paths to environment for use in ioc startup script
    source ${SUPPORT}/configure/RELEASE.shell
  
    # if there is a non-zero length config.tz then decompress into config_untar
    if [ -s config.tz ]
    then
        # decompress the configuration files into config_untar (/tmp is writeable)
        config_dir=/tmp/config_untar
  
        mkdir -p ${config_dir}
        tar -zxvf config.tz -C ${config_dir}
    else
        config_dir=${TOP}/config
    fi
  
    # setup filenames for boot scripts
    startup_src=${config_dir}/ioc.boot.yaml
    boot_src=${config_dir}/ioc.boot
    db_src=/tmp/make_db.sh
    boot=/tmp/$(basename ${boot_src})
    db=/tmp/ioc.db
  
    # If there is a yaml ioc description then generate the startup and DB.
    # Otherwise assume the starup script ioc.boot is provided in the config folder.
    if [ -f ${startup_src} ] ; then
        # get ibek defs files from this ioc and all support modules and this IOC
        # defs="${SUPPORT}/*/ibek/*.ibek.defs.yaml ${TOP}/ibek/*.ibek.defs.yaml"
  
        # TODO - for early development we ship all latest def files in ioc/ibek
        defs=${TOP}/ibek/*.ibek.defs.yaml
        ibek build-startup ${startup_src} ${defs} --out ${boot} --db-out ${db_src}
    fi
  
    # build expanded database using the db_src shell script
    if [ -f ${db_src} ]; then
        bash ${db_src} > ${db}
    fi
    exec ${IOC}/bin/linux-x86_64/ioc ${boot}
  version.txt: |
    IOC bl45p-mo-ioc-01 version 0.0.1-b0
---
# Source: bl45p-mo-ioc-01/templates/ioc.yaml
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: bl45p-mo-ioc-01
  namespace: bl45p
  labels:
    app: bl45p-mo-ioc-01
    beamline: bl45p
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 10Mi
---
# Source: bl45p-mo-ioc-01/templates/ioc.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: bl45p-mo-ioc-01
  namespace: bl45p
  labels:
    app: bl45p-mo-ioc-01
    beamline: bl45p
    ioc_version: "0.0.1-b0"
    is_ioc: "True"
  annotations:
    kubernetes.io/change-cause: 0.0.1-b0 deployed
spec:
  replicas: 1
  selector:
    matchLabels:
      app: bl45p-mo-ioc-01
  template:
    metadata:
      labels:
        app: bl45p-mo-ioc-01
        beamline: bl45p
        ioc_version: "0.0.1-b0"
        is_ioc: "True"
    spec:
      serviceAccountName: "bl45p-priv"
      hostNetwork: true
      terminationGracePeriodSeconds: 5 # nice to have quick restarts on IOCs
      volumes:
        
        - name: bl45p-mo-ioc-01
          persistentVolumeClaim:
            claimName: bl45p-mo-ioc-01
        - name: config-volume
          configMap:
            name: bl45p-mo-ioc-01
      containers:
      - name: bl45p-mo-ioc-01
        image: ghcr.io/epics-containers/ioc-pmac-run:1.2.0
        command:
          - bash
        args:
          - /repos/epics/ioc/config/start.sh
        volumeMounts:
        - name: config-volume
          mountPath: /repos/epics/ioc/config
        
        - name: bl45p-mo-ioc-01
          mountPath: /autosave
        stdin: true
        tty: true
        securityContext:
          allowPrivilegeEscalation: false
        resources: 
          limits:
            cpu: "3"
            memory: 1Gi
          requests:
            cpu: 500m
            memory: 200Mi
        imagePullPolicy: Always
        env:
        - name: IOCSH_PS1
          value: "bl45p-mo-ioc-01 > "
        - name: IOC_NAME
          value: bl45p-mo-ioc-01
        - name: IOC_VERSION
          value: "0.0.1-b0"
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: beamline
                operator: In
                values:
                  - bl45p
      tolerations:
        - key: nodetype
          operator: Equal
          value: bl45p
          effect: NoSchedule
